name: Elixir CI

on:
  push:
    branches:
    - master
    - feature/*

jobs:
  verify:
    name: Verify |> ${{matrix.os}} |> OTP ${{matrix.otp}} |> Elixir ${{matrix.elixir}} |> Node ${{matrix.node}}
    runs-on: ${{matrix.os}}

    strategy:
      matrix:
        os: [ubuntu-16.04]
        otp: ['23.0']
        elixir: ['1.10.3']
        node: ['10.16.0']

    steps:
    - uses: actions/checkout@v2

    - name: Setup elixir
      uses: actions/setup-elixir@v1
      with:
        otp-version: ${{matrix.otp}}
        elixir-version: ${{matrix.elixir}}

    - name: Retrieve Mix Dependencies Cache
      uses: actions/cache@v1
      id: mix-cache # id to use in retrieve action
      with:
        path: deps
        key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

    - name: Install deps
      if: steps.mix-cache.outputs.cache-hit != 'true'
      run: |
        mix local.rebar --force
        mix local.hex --force
        mix deps.get
        mix deps.compile

    - name: Check formatting
      run: |
        mix format --check-formatted

    - name: Run Credo
      run: mix credo --strict

    # this is slow, uncomment before master merge
    # - name: Retrieve PLT Cache
    #   uses: actions/cache@v1
    #   id: plt-cache
    #   with:
    #     path: priv/plts
    #     key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-plts-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

    # - name: Create PLTs
      # if: steps.plt-cache.outputs.cache-hit != 'true'
    #   run: |
    #     mkdir -p priv/plts
    #     mix dialyzer --plt

    # - name: Run dialyzer
    #   run: mix dialyzer --no-check --halt-exit-status

  deploy:
    # only run this job if the verify job succeeds
    needs: verify

    # uncomment this before master merge
    # if: github.ref == 'refs/heads/master'

    name: Deploy Release |> ${{matrix.os}}
    runs-on: ${{matrix.os}}

    strategy:
      matrix:
        os: [ubuntu-16.04]

    steps:
    - name: Deploy release to bitfeels.keele.codes
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        port: ${{ secrets.PORT }}
        script: |
          whoami
          ls -la
          cd sentweet
          ls -la
