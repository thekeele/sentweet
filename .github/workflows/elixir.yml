name: Elixir CI

on:
  push:
    branches:
    - master
    - feature/*

jobs:
  verify:
    name: Verify |> ${{matrix.os}} |> OTP ${{matrix.otp}} |> Elixir ${{matrix.elixir}} |> Node ${{matrix.node}}
    runs-on: ${{matrix.os}}

    strategy:
      matrix:
        os: [ubuntu-16.04]
        otp: ['22.3']
        elixir: ['1.10.3']
        node: ['10.16.0']

    steps:
    - uses: actions/checkout@v2

    - name: Setup elixir
      uses: actions/setup-elixir@v1
      with:
        otp-version: ${{matrix.otp}}
        elixir-version: ${{matrix.elixir}}

    - name: Retrieve Mix Dependencies Cache
      uses: actions/cache@v1
      id: mix-cache # id to use in retrieve action
      with:
        path: deps
        key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

    - name: Install deps
      # if: steps.mix-cache.outputs.cache-hit != 'true'
      run: |
        mix local.rebar --force
        mix local.hex --force
        mix deps.get
        mix deps.compile

    - name: Check formatting
      run: |
        mix format --check-formatted

    - name: Run Credo
      run: mix credo --strict

  deploy:
    # only run this job if the verify job succeeds
    needs: verify

    # only deploy when master is the target
    if: github.ref == 'refs/heads/master'

    name: Deploy Release
    runs-on: ubuntu-latest

    steps:
    - name: Deploy release to bitfeels.keele.codes
      uses: appleboy/ssh-action@master
      with:
        script_stop: true
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        port: ${{ secrets.PORT }}
        script: |
          cd sentweet
          echo "Pull master"
          git pull origin master
          echo "Get deps"
          mix local.rebar --force
          mix local.hex --force
          mix deps.get --only prod
          echo "Install and deploy NPM assets"
          echo "Digest assets"
          MIX_ENV=prod mix phx.digest
          echo "Build release"
          MIX_ENV=prod mix release --overwrite
          echo "Current release version"
          _build/prod/rel/sen_tweet/bin/sen_tweet version
          echo "Current release PID"
          _build/prod/rel/sen_tweet/bin/sen_tweet pid
          echo "Restart release"
          _build/prod/rel/sen_tweet/bin/sen_tweet stop
          sleep 5
          _build/prod/rel/sen_tweet/bin/sen_tweet daemon_iex
          echo "Updated release version"
          _build/prod/rel/sen_tweet/bin/sen_tweet version
          echo "Updated release PID"
          _build/prod/rel/sen_tweet/bin/sen_tweet pid
